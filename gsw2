local barrelsFolder = workspace:WaitForChild("Barrels"):WaitForChild("Barrels")
local cratesFolder = workspace:WaitForChild("Barrels"):WaitForChild("Crates")
local kitchenFolder = workspace:WaitForChild("Island8"):WaitForChild("Kitchen")
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local backpack = player:WaitForChild("Backpack")
local userInputService = game:GetService("UserInputService")
local random = Random.new()
local mouse = player:GetMouse()

-- Function to simulate clicking with a timeout
local function simulateClick(target, maxClicks)
    local clickCount = 0
    while target and target:FindFirstChild("ClickDetector") and clickCount < maxClicks do
        wait(random:NextNumber(0.1, 0.3))
        mouse.Button1Down:FireServer(target.ClickDetector) -- Attempt server-side click
        fireclickdetector(target.ClickDetector) -- Fallback client-side click
        clickCount = clickCount + 1
    end
end

-- Debug print function
local function debugPrint(message)
    print("DEBUG: " .. message)
end

while true do
    debugPrint("Starting cycle, Backpack count: " .. #backpack:GetChildren())
    
    -- Check Backpack for more than 10 tools
    if #backpack:GetChildren() > 10 then
        debugPrint("Backpack > 10, processing Mixer2")
        for _, folder in pairs(kitchenFolder:GetChildren()) do
            if folder:FindFirstChild("JuicingBowl") then
                local mixer2 = folder.JuicingBowl:FindFirstChild("Mixer2")
                if mixer2 and mixer2:FindFirstChild("ClickDetector") then
                    local offsetX = random:NextNumber(-2, 2)
                    local offsetZ = random:NextNumber(-2, 2)
                    humanoidRootPart.CFrame = CFrame.new(mixer2.Position + Vector3.new(offsetX, 5, offsetZ))
                    wait(random:NextNumber(0.5, 1.5))
                    simulateClick(mixer2, 5) -- Limit to 5 clicks
                    debugPrint("Clicked Mixer2 at " .. tostring(mixer2.Position))
                end
            end
        end
    else
        -- Handle Barrels
        debugPrint("Processing Barrels")
        for _, barrel in pairs(barrelsFolder:GetChildren()) do
            if barrel:FindFirstChild("ClickDetector") then
                local offsetX = random:NextNumber(-2, 2)
                local offsetZ = random:NextNumber(-2, 2)
                humanoidRootPart.CFrame = CFrame.new(barrel.Position + Vector3.new(offsetX, 5, offsetZ))
                wait(random:NextNumber(0.1, 0.5))
                simulateClick(barrel, 5) -- Limit to 5 clicks
                debugPrint("Clicked Barrel at " .. tostring(barrel.Position))
            end
        end
        
        -- Handle Crates
        debugPrint("Processing Crates")
        for _, crate in pairs(cratesFolder:GetChildren()) do
            if crate:FindFirstChild("ClickDetector") then
                local offsetX = random:NextNumber(-2, 2)
                local offsetZ = random:NextNumber(-2, 2)
                humanoidRootPart.CFrame = CFrame.new(crate.Position + Vector3.new(offsetX, 5, offsetZ))
                wait(random:NextNumber(0.5, 1.5))
                simulateClick(crate, 5) -- Limit to 5 clicks
                debugPrint("Clicked Crate at " .. tostring(crate.Position))
            end
        end
        
        -- Handle Mixer2 in Kitchen folders
        debugPrint("Processing Kitchen Mixer2")
        for _, folder in pairs(kitchenFolder:GetChildren()) do
            if folder:FindFirstChild("JuicingBowl") then
                local mixer2 = folder.JuicingBowl:FindFirstChild("Mixer2")
                if mixer2 and mixer2:FindFirstChild("ClickDetector") then
                    local offsetX = random:NextNumber(-2, 2)
                    local offsetZ = random:NextNumber(-2, 2)
                    humanoidRootPart.CFrame = CFrame.new(mixer2.Position + Vector3.new(offsetX, 5, offsetZ))
                    wait(random:NextNumber(0.5, 1.5))
                    simulateClick(mixer2, 5) -- Limit to 5 clicks
                    debugPrint("Clicked Mixer2 at " .. tostring(mixer2.Position))
                end
            end
        end
    end

    -- Handle tools with "juice" or "milk"
    debugPrint("Processing Tools")
    for _, tool in pairs(backpack:GetChildren()) do
        if string.find(string.lower(tool.Name), "juice") or string.find(string.lower(tool.Name), "milk") then
            humanoid:EquipTool(tool)
            wait(0.2)
            
            local targetPart = workspace:WaitForChild("Targets"):WaitForChild("JuiceTarget") -- Update this path
            if targetPart and targetPart:FindFirstChild("ClickDetector") then
                humanoidRootPart.CFrame = CFrame.new(targetPart.Position + Vector3.new(0, 5, 0))
                wait(math.random(0.3, 1.0))
                simulateClick(targetPart, 5) -- Limit to 5 clicks
                debugPrint("Clicked Target at " .. tostring(targetPart.Position))
            end
        end
    end

    debugPrint("Waiting 10 seconds")
    wait(10)
end
