getgenv().Config = {
    ["MaxTools"] = 75, -- Maximum tools before processing
    ["FlySpeed"] = 300, -- Speed for flying to targets
    ["ClickDelayMin"] = 0.5, -- Minimum click delay
    ["ClickDelayMax"] = 0.5, -- Maximum click delay
    ["AntiAfkInterval"] = 0.5, -- Interval for anti-AFK movements
    ["LoopDelay"] = 10 -- Delay for main loop
}

repeat
    wait()
until game:IsLoaded()

-- Services
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

-- Create UI for tool count
game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("ScreenGui", math.huge) or (function()
    local gui = Instance.new("ScreenGui")
    gui.Name = "ToolCounterGui"
    gui.ResetOnSpawn = false
    gui.Parent = game:GetService("Players").LocalPlayer.PlayerGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 200, 0, 50)
    label.Position = UDim2.new(0.5, -100, 0.05, 0)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0.5
    label.Text = "Tools: 0"
    label.Parent = gui
end)()

-- Update tool count UI
spawn(function()
    while true do
        local count = 0
        for _, item in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if item:IsA("Tool") then
                count += 1
            end
        end
        game:GetService("Players").LocalPlayer.PlayerGui.ToolCounterGui.TextLabel.Text = "Tools: " .. count
        game:GetService("Players").LocalPlayer.PlayerGui.ToolCounterGui.TextLabel.TextColor3 = count > 70 and Color3.fromRGB(255, 100, 100) or Color3.new(1, 1, 1)
        task.wait(0.5)
    end
end)

-- Function to check if player is alive
function isAlive()
    return game:GetService("Players").LocalPlayer.Character and
           game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") and
           game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0
end

-- Respawn if dead
function ensureAlive()
    if not isAlive() then
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Connections"):WaitForChild("Spawn"):FireServer(1)
        end)
        game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
    end
end

-- Fly to target with tween
function flyToTarget(pos)
    local rootPart = game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    local humanoid = game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid")

    humanoid.Jump = true
    task.wait(0.5)
    humanoid.Jump = false

    humanoid.WalkSpeed = 115
    humanoid.JumpPower = 0

    local distance = (pos - rootPart.Position).Magnitude
    local duration = distance / getgenv().Config["FlySpeed"]

    local tween = game:GetService("TweenService"):Create(
        rootPart,
        TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(pos)}
    )
    tween:Play()
    tween.Completed:Wait()

    humanoid.WalkSpeed = 16
    humanoid.JumpPower = 50
end

-- Simulate click with delay
function simulateClick(obj)
    if obj and obj:FindFirstChild("ClickDetector") then
        task.wait(Random.new():NextNumber(getgenv().Config["ClickDelayMin"], getgenv().Config["ClickDelayMax"]))
        fireclickdetector(obj.ClickDetector)
    end
end

-- Anti-AFK movement
function antiAfk()
    local humanoid = game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid")
    humanoid.Jump = true
    task.wait(getgenv().Config["AntiAfkInterval"])
    humanoid.Jump = false
    humanoid:Move(Vector3.new(Random.new():NextNumber(-5, 5), 0, Random.new():NextNumber(-5, 5)), true)
    task.wait(getgenv().Config["AntiAfkInterval"])
end

-- Find nearest object
function findNearest(list)
    local closest, minDist = nil, math.huge
    local rootPart = game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    for _, obj in pairs(list) do
        local dist = (obj.Position - rootPart.Position).Magnitude
        if dist < minDist then
            minDist = dist
            closest = obj
        end
    end
    return closest
end

-- Handle tools with mouse click
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        for _, tool in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
            if tool:IsA("Tool") and (tool.Name:lower():find("juice") or tool.Name:lower():find("milk")) then
                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(tool)
                task.wait(0.2)
                if tool:FindFirstChild("ClickDetector") then
                    fireclickdetector(tool.ClickDetector)
                    task.wait(0.1)
                end
            end
        end
    end
end)

-- Main loop
spawn(function()
    while true do
        ensureAlive()

        if #game:GetService("Players").LocalPlayer.Backpack:GetChildren() > getgenv().Config["MaxTools"] then
            for _, folder in pairs(workspace:WaitForChild("Island8"):WaitForChild("Kitchen"):GetChildren()) do
                local bowl = folder:FindFirstChild("JuicingBowl")
                if bowl then
                    local mixer = bowl:FindFirstChild("Mixer2")
                    if mixer and mixer:FindFirstChild("ClickDetector") then
                        local offset = Vector3.new(Random.new():NextNumber(-2, 2), 5, Random.new():NextNumber(-2, 2))
                        flyToTarget(mixer.Position + offset)
                        task.wait(Random.new():NextNumber(0.5, 1.5))
                        simulateClick(mixer)
                        antiAfk()
                    end
                end
            end
        else
            local targets = {}
            for _, obj in pairs(workspace:WaitForChild("Barrels"):WaitForChild("Barrels"):GetChildren()) do
                if obj:FindFirstChild("ClickDetector") then table.insert(targets, obj) end
            end
            for _, obj in pairs(workspace:WaitForChild("Barrels"):WaitForChild("Crates"):GetChildren()) do
                if obj:FindFirstChild("ClickDetector") then table.insert(targets, obj) end
            end

            while #targets > 0 do
                ensureAlive()
                if #game:GetService("Players").LocalPlayer.Backpack:GetChildren() > getgenv().Config["MaxTools"] then break end

                local target = findNearest(targets)
                if target then
                    local offset = Vector3.new(Random.new():NextNumber(-2, 2), 5, Random.new():NextNumber(-2, 2))
                    flyToTarget(target.Position + offset)
                    task.wait(Random.new():NextNumber(0.1, 0.5))
                    simulateClick(target)
                    antiAfk()
                    for i, obj in pairs(targets) do
                        if obj == target then table.remove(targets, i) break end
                    end
                end
            end
        end

        task.wait(getgenv().Config["LoopDelay"])
    end
end)
