getgenv().Config = {
    ["MaxTools"] = 50, -- Maximum tools before stopping collection
    ["AntiAfkInterval"] = 0.5, -- Interval for anti-AFK movements
}

-- Wait for game to load
repeat task.wait() until game:IsLoaded()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
repeat task.wait() until LocalPlayer and LocalPlayer:FindFirstChild("Backpack") and LocalPlayer:FindFirstChild("PlayerGui")

-- Anti-AFK
LocalPlayer.Idled:Connect(function()
    local vu = game:GetService("VirtualUser")
    pcall(function()
        vu:CaptureController()
        vu:ClickButton2(Vector2.new())
    end)
end)

-- UI Tool Counter
if not LocalPlayer.PlayerGui:FindFirstChild("ToolCounterGui") then
    local gui = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
    gui.Name = "ToolCounterGui"
    gui.ResetOnSpawn = false

    local label = Instance.new("TextLabel", gui)
    label.Name = "CountLabel"
    label.Size = UDim2.new(0, 220, 0, 50)
    label.Position = UDim2.new(0.5, -110, 0.05, 0)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0.5
    label.Text = "Tools: 0"
end

-- Update Tool Count
task.spawn(function()
    while task.wait(0.5) do
        if LocalPlayer:FindFirstChild("Backpack") then
            local count = 0
            for _, t in ipairs(LocalPlayer.Backpack:GetChildren()) do
                if t:IsA("Tool") then count += 1 end
            end
            local gui = LocalPlayer.PlayerGui:FindFirstChild("ToolCounterGui")
            if gui and gui:FindFirstChild("CountLabel") then
                gui.CountLabel.Text = "Tools: " .. count
                gui.CountLabel.TextColor3 = (count >= getgenv().Config["MaxTools"])
                    and Color3.fromRGB(255,100,100) or Color3.new(1,1,1)
            end
        end
    end
end)

-- Utils
local function isAlive()
    local char = LocalPlayer.Character
    return char and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0
end

local function ensureAlive()
    if not isAlive() then
        LocalPlayer.CharacterAdded:Wait()
    end
end

local function teleportToTarget(pos)
    local char = LocalPlayer.Character
    if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
    local root = char.HumanoidRootPart
    root.CFrame = CFrame.new(pos) -- Instant teleport
end

local function antiAfk()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        char.Humanoid.Jump = true
        task.wait(getgenv().Config["AntiAfkInterval"])
        char.Humanoid.Jump = false
    end
end

local function simulateClick(obj)
    if not obj then return end
    if obj:FindFirstChild("ClickDetector") then
        pcall(function() fireclickdetector(obj.ClickDetector) end)
    end
end

-- Main Loop for Collecting
task.spawn(function()
    while true do
        ensureAlive()
        local backpack = LocalPlayer.Backpack
        local count = 0
        for _, t in ipairs(backpack:GetChildren()) do if t:IsA("Tool") then count += 1 end end

        if count < getgenv().Config["MaxTools"] then
            local barrels = workspace:FindFirstChild("Barrels")
            if barrels then
                local targets = {}
                if barrels:FindFirstChild("Barrels") then
                    for _, obj in pairs(barrels.Barrels:GetChildren()) do
                        if obj:IsA("BasePart") and obj:FindFirstChild("ClickDetector") then
                            table.insert(targets, obj)
                        end
                    end
                end
                if barrels:FindFirstChild("Crates") then
                    for _, obj in pairs(barrels.Crates:GetChildren()) do
                        if obj:IsA("BasePart") and obj:FindFirstChild("ClickDetector") then
                            table.insert(targets, obj)
                        end
                    end
                end

                for _, target in ipairs(targets) do
                    if count >= getgenv().Config["MaxTools"] then break end
                    ensureAlive()
                    teleportToTarget(target.Position) -- Instant teleport to exact position
                    simulateClick(target)
                    antiAfk()
                    task.wait(0.1) -- Fixed 0.1s delay between teleport                    
                    -- Update count
                    count = 0
                    for _, t in ipairs(backpack:GetChildren()) do if t:IsA("Tool") then count += 1 end end
                end
            end
        end

    end
end)
