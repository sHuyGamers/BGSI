getgenv().Config = {
    ["MaxTools"] = 75, -- Maximum tools before processing
    ["FlySpeed"] = 300, -- Speed for flying to targets
    ["ClickDelayMin"] = 0.2, -- Minimum click delay
    ["ClickDelayMax"] = 0.5, -- Maximum click delay
    ["AntiAfkInterval"] = 0.5, -- Interval for anti-AFK movements
    ["LoopDelay"] = 10 -- Delay for main loop
}

-- Wait for game to load and key components
repeat
    wait()
until game:IsLoaded()
repeat
    wait()
until game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.PlayerGui and
      game:GetService("Players").LocalPlayer.Backpack and workspace

-- Services
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    local virtualUser = game:GetService("VirtualUser")
    if virtualUser then
        pcall(function()
            virtualUser:CaptureController()
            virtualUser:ClickButton2(Vector2.new())
        end)
    end
end)

-- Create UI for tool count
if not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ToolCounterGui") then
    local gui = Instance.new("ScreenGui")
    gui.Name = "ToolCounterGui"
    gui.ResetOnSpawn = false
    gui.Parent = game:GetService("Players").LocalPlayer.PlayerGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 200, 0, 50)
    label.Position = UDim2.new(0.5, -100, 0.05, 0)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0.5
    label.Text = "Tools: 0"
    label.Parent = gui
end

-- Update tool count UI
spawn(function()
    while true do
        local player = game:GetService("Players").LocalPlayer
        if player and player.Backpack then
            local count = 0
            for _, item in pairs(player.Backpack:GetChildren()) do
                if item:IsA("Tool") then
                    count += 1
                end
            end
            local gui = player.PlayerGui:FindFirstChild("ToolCounterGui")
            if gui and gui:FindFirstChild("TextLabel") then
                gui.TextLabel.Text = "Tools: " .. count
                gui.TextLabel.TextColor3 = count > 70 and Color3.fromRGB(255, 100, 100) or Color3.new(1, 1, 1)
            end
        end
        task.wait(0.5)
    end
end)

-- Function to check if player is alive
function isAlive()
    local player = game:GetService("Players").LocalPlayer
    return player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0
end

-- Respawn if dead
function ensureAlive()
    if not isAlive() then
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Connections"):WaitForChild("Spawn"):FireServer(1)
        end)
        game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
    end
end

-- Fly to target with tween
function flyToTarget(pos)
    local character = game:GetService("Players").LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        warn("Character or HumanoidRootPart not found!")
        return
    end
    local rootPart = character.HumanoidRootPart

    local distance = (pos - rootPart.Position).Magnitude
    local duration = distance / getgenv().Config["FlySpeed"]

    local tweenService = game:GetService("TweenService")
    if tweenService then
        pcall(function()
            local tween = tweenService:Create(
                rootPart,
                TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {CFrame = CFrame.new(pos)}
            )
            tween:Play()
            tween.Completed:Wait()
        end)
    end
end

-- Simulate click with VirtualInputManager
local VirtualInputManager = game:GetService("VirtualInputManager")
function simulateClick(obj)
    if obj and obj:FindFirstChild("ClickDetector") and VirtualInputManager then
        local pos = obj.Position
        print("Attempting to click on:", obj.Name, "at", pos)
        task.wait(Random.new():NextNumber(getgenv().Config["ClickDelayMin"], getgenv().Config["ClickDelayMax"]))
        pcall(function()
            VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, true, obj, 1)
            task.wait(0.1)
            VirtualInputManager:SendMouseButtonEvent(pos.X, pos.Y, 0, false, obj, 1)
        end)
        if not success then warn("Click simulation failed for:", obj.Name) end
    else
        warn("ClickDetector or VirtualInputManager not found for:", obj and obj.Name or "nil object")
    end
end

-- Anti-AFK movement
function antiAfk()
    local character = game:GetService("Players").LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid
        humanoid.Jump = true
        task.wait(getgenv().Config["AntiAfkInterval"])
        humanoid.Jump = false
        humanoid:Move(Vector3.new(Random.new():NextNumber(-5, 5), 0, Random.new():NextNumber(-5, 5)), true)
        task.wait(getgenv().Config["AntiAfkInterval"])
    end
end

-- Find nearest object
function findNearest(list)
    local closest, minDist = nil, math.huge
    local character = game:GetService("Players").LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart
        for _, obj in pairs(list) do
            local dist = (obj.Position - rootPart.Position).Magnitude
            if dist < minDist then
                minDist = dist
                closest = obj
            end
        end
    end
    return closest
end

-- Handle tools with mouse click
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local player = game:GetService("Players").LocalPlayer
        if player and player.Backpack and player.Character and player.Character:FindFirstChild("Humanoid") then
            for _, tool in pairs(player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and (tool.Name:lower():find("juice") or tool.Name:lower():find("milk")) then
                    player.Character.Humanoid:EquipTool(tool)
                    task.wait(0.2)
                    if tool:FindFirstChild("ClickDetector") then
                        simulateClick(tool)
                        task.wait(0.1)
                    end
                end
            end
        end
    end
end)

-- Main loop
spawn(function()
    while true do
        ensureAlive()

        local barrels = workspace:FindFirstChild("Barrels")
        local island8 = workspace:FindFirstChild("Island8")
        if barrels and barrels:FindFirstChild("Barrels") and barrels:FindFirstChild("Crates") and island8 and island8:FindFirstChild("Kitchen") then
            if #game:GetService("Players").LocalPlayer.Backpack:GetChildren() > getgenv().Config["MaxTools"] then
                for _, folder in pairs(island8.Kitchen:GetChildren()) do
                    local bowl = folder:FindFirstChild("JuicingBowl")
                    if bowl then
                        local mixer = bowl:FindFirstChild("Mixer2")
                        if mixer and mixer:FindFirstChild("ClickDetector") then
                            local offset = Vector3.new(Random.new():NextNumber(-2, 2), 5, Random.new():NextNumber(-2, 2))
                            flyToTarget(mixer.Position + offset)
                            task.wait(Random.new():NextNumber(0.5, 1.5))
                            simulateClick(mixer)
                            antiAfk()
                        end
                    end
                end
            else
                local targets = {}
                for _, obj in pairs(barrels.Barrels:GetChildren()) do
                    if obj:FindFirstChild("ClickDetector") then table.insert(targets, obj) end
                end
                for _, obj in pairs(barrels.Crates:GetChildren()) do
                    if obj:FindFirstChild("ClickDetector") then table.insert(targets, obj) end
                end

                while #targets > 0 do
                    ensureAlive()
                    if #game:GetService("Players").LocalPlayer.Backpack:GetChildren() > getgenv().Config["MaxTools"] then break end

                    local target = findNearest(targets)
                    if target then
                        local offset = Vector3.new(Random.new():NextNumber(-2, 2), 5, Random.new():NextNumber(-2, 2))
                        flyToTarget(target.Position + offset)
                        task.wait(Random.new():NextNumber(0.1, 0.5))
                        simulateClick(target)
                        antiAfk()
                        for i, obj in pairs(targets) do
                            if obj == target then table.remove(targets, i) break end
                        end
                    end
                end
            end
        else
            warn("Required workspace folders not found! Barrels:", barrels, "Island8:", island8)
        end

        task.wait(getgenv().Config["LoopDelay"])
    end
end)
